@tag = 'project-renard'
eval %x(orbital-cli launch vagrant helper)

def add_synced_folders( config, options = {} )
	config.vm.synced_folder ".", "/vagrant", disabled: true

	directories = %x(orbital-cli launch vagrant project-directories --gitgot-tag  #{@tag}).split "\0"
	add_synced_folders_helper( config, directories, 'build', options )

	directories = %x(orbital-cli launch vagrant project-directories --gitgot-tag  orbital-transfer).split "\0"
	add_synced_folders_helper( config, directories, 'orbital-transfer', options )
end

Vagrant.configure(2) do |config|
	config.ssh.forward_x11 = true

	config.vm.define :trusty64, primary: true do |trusty|
		trusty.vm.box = 'ubuntu/trusty64'
		add_synced_folders( trusty )
	end

	config.vm.define :jessie64, autostart: false do |jessie|
		jessie.vm.box = "debian/contrib-jessie64"
		add_synced_folders( jessie )
	end

	config.vm.define :precise64, autostart: false do |precise|
		precise.vm.box = "ubuntu/precise64"
		add_synced_folders( precise )
	end

	config.vm.define :debian_i386, autostart: false do |debian|
		debian.vm.box = "bento/debian-11.2-i386"
		add_synced_folders( debian )
        end

	config.vm.define :freebsd_12_3, autostart: false do |freebsd|
		freebsd.vm.box = "freebsd/FreeBSD-12.3-STABLE"
	end

	config.vm.define :solaris_11_4_dev, autostart: false do |solaris|
		solaris.vm.box = "rbrunckhorst/solaris11.4_dev"
	end

	# To add the Yosemite box, run
	#
	#     $ vagrant box add https://vagrantcloud.com/AndrewDryga/boxes/vagrant-box-osx/versions/0.2.1/providers/virtualbox.box --name AndrewDryga/vagrant-box-osx-yosemite
	#
	# To add the Sierra box, run
	#
	#     $ vagrant box add http://files.dryga.com/boxes/osx-sierra-0.3.1.box --name AndrewDryga/vagrant-box-osx-sierra
	#
	# See <https://atlas.hashicorp.com/AndrewDryga/boxes/vagrant-box-osx>
	# for more information.
{
	'osx-yosemite-10.10' => {
			vnc_port: 5908,
			box: 'AndrewDryga/vagrant-box-osx-yosemite' },
	'osx-sierra-10.12'   => {
			vnc_port: 5909,
			box: 'AndrewDryga/vagrant-box-osx-sierra' },
	'osx-catalina-10.15'   => {
			vnc_port: 5910,
			box: 'macOS-catalina' },
}.each	do |name, data|
	config.vm.define name, autostart: false do |osx|
		osx.vm.box = data[:box]
		osx.vm.provider "virtualbox" do |v|
			v.customize ["modifyvm", :id,
				"--cpu-profile", "Intel Core i7-6700K",
				"--cpuexecutioncap", "50",
			]
			v.memory = 2048
		end

		#osx.vm.network :private_network, ip: "192.168.0.0"
		osx.vm.network "public_network"

		# Sets up VNC on Mac OSX. Connect from host machine by running:
		#
		#     $ echo 'vagrant' | xtightvncviewer -autopass :8
		#
		# The VNC password is "vagrant".
		#
		# The password for the Vagrant user is "vagrant".
		osx.vm.network "forwarded_port", guest: 5900, host: data[:vnc_port]
		osx.vm.provision :shell, privileged: false, inline: <<~SHELL
			# <https://serverfault.com/questions/120559/vnc-viewer-not-connecting-to-mac-from-windows>
			export VNC_PASSWD="vagrant";
			sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate -configure -access -off -restart -agent -privs -all -allowAccessFor -allUsers -clientopts -setvncpw -vncpw $VNC_PASSWD -setvnclegacy -vnclegacy yes
		SHELL

		osx.vm.provision :shell, privileged: false, inline: File.readlines('../script/from-vagrant/os-install-osx-sshfs').join("")
		osx.vm.provision :shell, privileged: false, inline: <<~SHELL
			echo '#{@privkey}' > ~/.ssh/id_host
			chmod 600 ~/.ssh/id_host
			# force adding to ~/.ssh/known_hosts so no verification needed
			ssh -o StrictHostKeyChecking=no #{Etc.getlogin}@10.0.2.2 -n true
		SHELL
		add_synced_folders( osx, type: "sshfs" )

		osx.vm.provision :shell, privileged: false, inline: <<~SHELL
			brew install cpanminus openssl
			export PKG_CONFIG_PATH='/usr/local/opt/openssl/lib/pkgconfig'
			export PATH="/usr/local/opt/openssl/bin:$PATH"
			cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
			cpanm Net::SSLeay
			echo 'eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)' >> ~/.bashrc
		SHELL

		osx.vm.provision :shell, privileged: false, inline: <<~SHELL
			if [ -d "$HOME/project-renard/devops/devops/vagrant" ]; then
				$HOME/project-renard/devops/devops/vagrant/patch-osx-python
			else
				$HOME/project-renard/devops/vagrant/patch-osx-python
			fi
		SHELL
	end
end

	config.vm.define :win10, autostart: false do |win10|
		win10.vm.box = "Microsoft/EdgeOnWindows10"
		#add_synced_folders( win10 )
		configure_windows(win10, 'win10')
	end

	config.vm.define :win10_StefanScherer, autostart: false do |win10|
		# sudo gem install winrm winrm-elevated
		config.vm.box = "StefanScherer/windows_10"
		#add_synced_folders( win10 )
		#configure_windows(win10, 'win10_StefanScherer')

		#config.vm.communicator = "winrm"
		## Admin user name and password
		#config.winrm.username = "vagrant"
		#config.winrm.password = "vagrant"
	end

end
